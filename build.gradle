plugins {
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'maven-publish'
    id "com.mendhak.gradlecrowdin" version "0.1.1"
    id "com.modrinth.minotaur" version "1.1.0"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven {
        url = "https://minecraft.guntram.de/maven/"
    }
    maven {
        url = 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/'
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation include("io.github.cottonmc:LibGui:${project.libgui_version}")

    modImplementation "de.guntram.mcmod:crowdin-translate:1.2"
    include "de.guntram.mcmod:crowdin-translate:1.2"

    modImplementation group: 'net.devtech', name: 'arrp', version: '0.3.7'

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

crowdinUpload {
    apiKey = System.getenv("XYKEY_CROWDIN_KEY")
    projectId = 'xykey'
    files = [
            [ name: 'en_us.json', source: 'run/rrp.debug/xykey;main/assets/lang/en_us.json' ]
    ]
}

import com.modrinth.minotaur.TaskModrinthUpload

def getvers = { ->
    def ve = mod_version
    if(ve.endsWith("SNAPSHOT")) {
        ve += "-" + new Date().format("yy.MM.dd.HH")
    }
    return ve
}

def getchangelog = { ->
    def gchangelog = project.file("changelog.md").getText()
    if(release_type == "snapshot") {
        gchangelog += "\n\nThis is a snapshot, it has not been tested."
    } else if(release_type == "beta") {
        gchangelog += "\n\nThis is a beta version, and it has been barely tested. If you find any issues, please report them on the [Github issues page](https://github.com/kotakotik22/xykey/issues)"
    }
    return gchangelog
}

task publishModrinth (type: TaskModrinthUpload) {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = '5wbI4ZfZ'
    versionNumber = getvers()
    versionName = getvers()
    uploadFile = "${project.buildDir.absolutePath}/libs/xykey-${mod_version}.jar"
    for(String vers : project.file("mcversions.txt").getText().split(",")) {
        addGameVersion(vers)
    }
    addLoader('fabric')
    releaseType = release_type
    changelog = getchangelog()
    dependsOn(remapJar)
}

curseforge {
    project {
        id = '446123'
        changelog = getchangelog
        releaseType = release_type
        changelogType = "markdown"
        apiKey = System.getenv("CURSEFORGE_KEY")

        for(String vers : project.file("mcversions.txt").getText().split(",")) {
            addGameVersion(vers)
        }

        mainArtifact remapJar
    }
}